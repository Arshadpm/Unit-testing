function cov_1ue8natwoz(){var path="C:\\Users\\arshad.muhammed\\Desktop\\basictest\\Errorcode.js";var hash="21cfcf986b040768613572b070179a6ad3b53f01";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\arshad.muhammed\\Desktop\\basictest\\Errorcode.js",statementMap:{"0":{start:{line:5,column:22},end:{line:22,column:3}},"1":{start:{line:26,column:2},end:{line:30,column:3}},"2":{start:{line:27,column:20},end:{line:27,column:44}},"3":{start:{line:28,column:4},end:{line:28,column:51}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:26,column:28},end:{line:26,column:29}},loc:{start:{line:26,column:49},end:{line:30,column:3}},line:26}},branchMap:{"0":{loc:{start:{line:28,column:16},end:{line:28,column:49}},type:"binary-expr",locations:[{start:{line:28,column:16},end:{line:28,column:23}},{start:{line:28,column:27},end:{line:28,column:49}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"21cfcf986b040768613572b070179a6ad3b53f01"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ue8natwoz=function(){return actualCoverage;};}return actualCoverage;}cov_1ue8natwoz();// Define an object that maps error codes to error messages
const errorMessages=(cov_1ue8natwoz().s[0]++,{1000:'Error: invalid input format',1001:'Error: No input',1002:'Reason:  Email address should contain exactly one @ symbol',1003:'Reason: Username should contain only letters, numbers, periods, plus signs, and hyphens',1004:'Reason: Domain should contain at least one period',1005:'Reason: Domain name should contain only letters and numbers',1006:'Reason: Top-level domain should consist of 2-6 letters',1007:'Valid email address',200:'OK',201:'Created',204:'No Content',400:'Bad Request',401:'Unauthorized',403:'Forbidden',404:'Not Found',500:'Internal Server Error'});// Function to print error messages
cov_1ue8natwoz().s[1]++;exports.printErrorMessage=function(errorCode){cov_1ue8natwoz().f[0]++;const message=(cov_1ue8natwoz().s[2]++,errorMessages[errorCode]);cov_1ue8natwoz().s[3]++;console.log((cov_1ue8natwoz().b[0][0]++,message)||(cov_1ue8natwoz().b[0][1]++,'Error: unknown error'));};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJlcnJvck1lc3NhZ2VzIiwiZXhwb3J0cyIsInByaW50RXJyb3JNZXNzYWdlIiwiZXJyb3JDb2RlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlcyI6WyJFcnJvcmNvZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5cclxuLy8gRGVmaW5lIGFuIG9iamVjdCB0aGF0IG1hcHMgZXJyb3IgY29kZXMgdG8gZXJyb3IgbWVzc2FnZXNcclxuY29uc3QgZXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIDEwMDA6ICdFcnJvcjogaW52YWxpZCBpbnB1dCBmb3JtYXQnLFxyXG4gICAgMTAwMTogJ0Vycm9yOiBObyBpbnB1dCcsXHJcbiAgICAxMDAyOiAnUmVhc29uOiAgRW1haWwgYWRkcmVzcyBzaG91bGQgY29udGFpbiBleGFjdGx5IG9uZSBAIHN5bWJvbCcsXHJcbiAgICAxMDAzOidSZWFzb246IFVzZXJuYW1lIHNob3VsZCBjb250YWluIG9ubHkgbGV0dGVycywgbnVtYmVycywgcGVyaW9kcywgcGx1cyBzaWducywgYW5kIGh5cGhlbnMnLFxyXG4gICAgMTAwNDonUmVhc29uOiBEb21haW4gc2hvdWxkIGNvbnRhaW4gYXQgbGVhc3Qgb25lIHBlcmlvZCcsXHJcbiAgICAxMDA1OidSZWFzb246IERvbWFpbiBuYW1lIHNob3VsZCBjb250YWluIG9ubHkgbGV0dGVycyBhbmQgbnVtYmVycycsXHJcbiAgICAxMDA2OidSZWFzb246IFRvcC1sZXZlbCBkb21haW4gc2hvdWxkIGNvbnNpc3Qgb2YgMi02IGxldHRlcnMnLFxyXG4gICAgMTAwNzonVmFsaWQgZW1haWwgYWRkcmVzcycsXHJcbiAgICAyMDA6ICdPSycsXHJcbiAgICAyMDE6ICdDcmVhdGVkJyxcclxuICAgIDIwNDogJ05vIENvbnRlbnQnLFxyXG4gICAgNDAwOiAnQmFkIFJlcXVlc3QnLFxyXG4gICAgNDAxOiAnVW5hdXRob3JpemVkJyxcclxuICAgIDQwMzogJ0ZvcmJpZGRlbicsXHJcbiAgICA0MDQ6ICdOb3QgRm91bmQnLFxyXG4gICAgNTAwOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJ1xyXG4gIH07XHJcbiAgXHJcblxyXG4gIC8vIEZ1bmN0aW9uIHRvIHByaW50IGVycm9yIG1lc3NhZ2VzXHJcbiAgZXhwb3J0cy5wcmludEVycm9yTWVzc2FnZT1mdW5jdGlvbiAoZXJyb3JDb2RlKSB7XHJcbiAgICBjb25zdCBtZXNzYWdlID0gZXJyb3JNZXNzYWdlc1tlcnJvckNvZGVdO1xyXG4gICAgY29uc29sZS5sb2cobWVzc2FnZSB8fCAnRXJyb3I6IHVua25vd24gZXJyb3InKTtcclxuICAgIFxyXG4gIH1cclxuXHJcblxyXG5cclxuXHJcbiBcclxuXHJcbiAgIl0sIm1hcHBpbmdzIjoicXNDQWVZO0FBQUEsMkZBWlo7QUFDQSxLQUFNQSxjQUFhLDBCQUFHLENBQ2xCLElBQUksQ0FBRSw2QkFBNkIsQ0FDbkMsSUFBSSxDQUFFLGlCQUFpQixDQUN2QixJQUFJLENBQUUsNERBQTRELENBQ2xFLElBQUksQ0FBQyx5RkFBeUYsQ0FDOUYsSUFBSSxDQUFDLG1EQUFtRCxDQUN4RCxJQUFJLENBQUMsNkRBQTZELENBQ2xFLElBQUksQ0FBQyx3REFBd0QsQ0FDN0QsSUFBSSxDQUFDLHFCQUFxQixDQUMxQixHQUFHLENBQUUsSUFBSSxDQUNULEdBQUcsQ0FBRSxTQUFTLENBQ2QsR0FBRyxDQUFFLFlBQVksQ0FDakIsR0FBRyxDQUFFLGFBQWEsQ0FDbEIsR0FBRyxDQUFFLGNBQWMsQ0FDbkIsR0FBRyxDQUFFLFdBQVcsQ0FDaEIsR0FBRyxDQUFFLFdBQVcsQ0FDaEIsR0FBRyxDQUFFLHVCQUNQLENBQUMsRUFHRDtBQUFBLHdCQUNBQyxPQUFPLENBQUNDLGlCQUFpQixDQUFDLFNBQVVDLFNBQVMsQ0FBRSx5QkFDN0MsS0FBTUMsUUFBTywwQkFBR0osYUFBYSxDQUFDRyxTQUFTLENBQUMsRUFBQyx3QkFDekNFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRCQUFBRixPQUFPLCtCQUFJLHNCQUFzQixFQUFDLENBRWhELENBQUMifQ==