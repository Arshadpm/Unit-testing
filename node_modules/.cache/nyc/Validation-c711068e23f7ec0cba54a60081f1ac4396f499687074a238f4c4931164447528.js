function cov_2mn0mn07f7(){var path="C:\\Users\\arshad.muhammed\\Desktop\\basictest\\Validation.js";var hash="5165ba6c3c255c224c5289d8aa8dbda322003f73";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\arshad.muhammed\\Desktop\\basictest\\Validation.js",statementMap:{"0":{start:{line:2,column:14},end:{line:2,column:30}},"1":{start:{line:3,column:13},end:{line:3,column:35}},"2":{start:{line:24,column:0},end:{line:184,column:2}},"3":{start:{line:27,column:0},end:{line:183,column:1}},"4":{start:{line:29,column:2},end:{line:29,column:69}},"5":{start:{line:30,column:2},end:{line:30,column:32}},"6":{start:{line:31,column:8},end:{line:31,column:39}},"7":{start:{line:32,column:8},end:{line:32,column:20}},"8":{start:{line:37,column:16},end:{line:37,column:32}},"9":{start:{line:40,column:2},end:{line:121,column:1}},"10":{start:{line:42,column:4},end:{line:42,column:54}},"11":{start:{line:43,column:4},end:{line:43,column:34}},"12":{start:{line:44,column:4},end:{line:44,column:35}},"13":{start:{line:46,column:4},end:{line:46,column:15}},"14":{start:{line:50,column:16},end:{line:50,column:24}},"15":{start:{line:52,column:14},end:{line:52,column:22}},"16":{start:{line:56,column:24},end:{line:56,column:43}},"17":{start:{line:57,column:2},end:{line:64,column:3}},"18":{start:{line:59,column:4},end:{line:59,column:54}},"19":{start:{line:60,column:4},end:{line:60,column:34}},"20":{start:{line:61,column:4},end:{line:61,column:35}},"21":{start:{line:63,column:4},end:{line:63,column:15}},"22":{start:{line:67,column:22},end:{line:67,column:39}},"23":{start:{line:69,column:2},end:{line:69,column:27}},"24":{start:{line:74,column:2},end:{line:81,column:3}},"25":{start:{line:76,column:4},end:{line:76,column:54}},"26":{start:{line:77,column:4},end:{line:77,column:34}},"27":{start:{line:78,column:5},end:{line:78,column:36}},"28":{start:{line:80,column:4},end:{line:80,column:15}},"29":{start:{line:84,column:2},end:{line:91,column:3}},"30":{start:{line:86,column:4},end:{line:86,column:54}},"31":{start:{line:87,column:4},end:{line:87,column:34}},"32":{start:{line:88,column:5},end:{line:88,column:36}},"33":{start:{line:90,column:4},end:{line:90,column:15}},"34":{start:{line:94,column:21},end:{line:94,column:35}},"35":{start:{line:95,column:25},end:{line:95,column:60}},"36":{start:{line:98,column:26},end:{line:98,column:42}},"37":{start:{line:99,column:2},end:{line:107,column:3}},"38":{start:{line:101,column:4},end:{line:101,column:54}},"39":{start:{line:102,column:4},end:{line:102,column:34}},"40":{start:{line:103,column:4},end:{line:103,column:35}},"41":{start:{line:106,column:4},end:{line:106,column:15}},"42":{start:{line:110,column:30},end:{line:110,column:47}},"43":{start:{line:111,column:2},end:{line:119,column:3}},"44":{start:{line:113,column:4},end:{line:113,column:54}},"45":{start:{line:114,column:4},end:{line:114,column:34}},"46":{start:{line:115,column:4},end:{line:115,column:35}},"47":{start:{line:118,column:4},end:{line:118,column:15}},"48":{start:{line:177,column:0},end:{line:177,column:29}},"49":{start:{line:178,column:0},end:{line:178,column:30}},"50":{start:{line:180,column:0},end:{line:180,column:235}},"51":{start:{line:182,column:0},end:{line:182,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:23},end:{line:24,column:24}},loc:{start:{line:24,column:40},end:{line:184,column:1}},line:24}},branchMap:{"0":{loc:{start:{line:27,column:0},end:{line:183,column:1}},type:"if",locations:[{start:{line:27,column:0},end:{line:183,column:1}},{start:{line:27,column:0},end:{line:183,column:1}}],line:27},"1":{loc:{start:{line:40,column:2},end:{line:121,column:1}},type:"if",locations:[{start:{line:40,column:2},end:{line:121,column:1}},{start:{line:40,column:2},end:{line:121,column:1}}],line:40},"2":{loc:{start:{line:57,column:2},end:{line:64,column:3}},type:"if",locations:[{start:{line:57,column:2},end:{line:64,column:3}},{start:{line:57,column:2},end:{line:64,column:3}}],line:57},"3":{loc:{start:{line:74,column:2},end:{line:81,column:3}},type:"if",locations:[{start:{line:74,column:2},end:{line:81,column:3}},{start:{line:74,column:2},end:{line:81,column:3}}],line:74},"4":{loc:{start:{line:84,column:2},end:{line:91,column:3}},type:"if",locations:[{start:{line:84,column:2},end:{line:91,column:3}},{start:{line:84,column:2},end:{line:91,column:3}}],line:84},"5":{loc:{start:{line:84,column:6},end:{line:84,column:52}},type:"binary-expr",locations:[{start:{line:84,column:7},end:{line:84,column:29}},{start:{line:84,column:33},end:{line:84,column:51}}],line:84},"6":{loc:{start:{line:99,column:2},end:{line:107,column:3}},type:"if",locations:[{start:{line:99,column:2},end:{line:107,column:3}},{start:{line:99,column:2},end:{line:107,column:3}}],line:99},"7":{loc:{start:{line:111,column:2},end:{line:119,column:3}},type:"if",locations:[{start:{line:111,column:2},end:{line:119,column:3}},{start:{line:111,column:2},end:{line:119,column:3}}],line:111}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5165ba6c3c255c224c5289d8aa8dbda322003f73"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mn0mn07f7=function(){return actualCoverage;};}return actualCoverage;}cov_2mn0mn07f7();const chalk=(cov_2mn0mn07f7().s[0]++,require('chalk'));//to make colorful text
const errorc=(cov_2mn0mn07f7().s[1]++,require('./Errorcode'));// exports.isValidEmail = function (email) {
//     console.log(chalk.gray.italic("\nentering into validate function() ......\n")); 
//     const emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
//     var isvalid= emailRegex.test(String(email).toLowerCase());
//     if (isvalid) {
//       console.log(chalk.bold.green("Email is valid: " + email));
//   } else {
//       console.log(chalk.bold.red("Email is invalid: " + email));
//       // console.log("Invalid Email format");
//       errorc.printErrorMessage(1000); // Output: Error: invalid input format
//   }
//   console.log(chalk.gray.italic("\nreturning value from validate function() ......\n"));
//   return isvalid;
//   }
cov_2mn0mn07f7().s[2]++;exports.isValidEmail=function(email){cov_2mn0mn07f7().f[0]++;cov_2mn0mn07f7().s[3]++;//   // Split the email address on the "@" character
if(email===""){cov_2mn0mn07f7().b[0][0]++;cov_2mn0mn07f7().s[4]++;console.log('\u001b[0m'+'validateEmail: Status for '+email,'is: ');cov_2mn0mn07f7().s[5]++;console.log("Status is 1001");cov_2mn0mn07f7().s[6]++;errorc.printErrorMessage(1001);cov_2mn0mn07f7().s[7]++;return 1001;}else{cov_2mn0mn07f7().b[0][1]++;const parts=(cov_2mn0mn07f7().s[8]++,email.split("@"));// Check if there are exactly 2 parts
cov_2mn0mn07f7().s[9]++;if(parts.length!==2){cov_2mn0mn07f7().b[1][0]++;cov_2mn0mn07f7().s[10]++;// errorc.console.log(chalk.red(1002));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[11]++;console.log("Status is 1002");cov_2mn0mn07f7().s[12]++;errorc.printErrorMessage(1002);//  console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[13]++;return 204;}else{cov_2mn0mn07f7().b[1][1]++;// Get the username and domain parts
var username=(cov_2mn0mn07f7().s[14]++,parts[0]);var domain=(cov_2mn0mn07f7().s[15]++,parts[1]);// Check if the username part contains only valid characters
const usernameRegex=(cov_2mn0mn07f7().s[16]++,/^[a-zA-Z0-9.+-]+$/);cov_2mn0mn07f7().s[17]++;if(!usernameRegex.test(username)){cov_2mn0mn07f7().b[2][0]++;cov_2mn0mn07f7().s[18]++;// console.log(chalk.red(1003));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[19]++;console.log("Status is 1003");cov_2mn0mn07f7().s[20]++;errorc.printErrorMessage(1003);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[21]++;return 204;}else{cov_2mn0mn07f7().b[2][1]++;}// Split the domain part on the "." character
const domainParts=(cov_2mn0mn07f7().s[22]++,domain.split("."));cov_2mn0mn07f7().s[23]++;console.log(domainParts);// Check if the TLD domain present
cov_2mn0mn07f7().s[24]++;if(domainParts[1]==''){cov_2mn0mn07f7().b[3][0]++;cov_2mn0mn07f7().s[25]++;//  console.log(chalk.red(1004));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[26]++;console.log("Status is 1006");cov_2mn0mn07f7().s[27]++;errorc.printErrorMessage(1006);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[28]++;return 204;}else{cov_2mn0mn07f7().b[3][1]++;}// Check if there are at least 2 parts
cov_2mn0mn07f7().s[29]++;if((cov_2mn0mn07f7().b[5][0]++,domainParts.length<2)||(cov_2mn0mn07f7().b[5][1]++,domainParts[1]=='')){cov_2mn0mn07f7().b[4][0]++;cov_2mn0mn07f7().s[30]++;//  console.log(chalk.red(1004));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[31]++;console.log("Status is 1004");cov_2mn0mn07f7().s[32]++;errorc.printErrorMessage(1004);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[33]++;return 204;}else{cov_2mn0mn07f7().b[4][1]++;}// Get the domain name and top-level domain
const domainName=(cov_2mn0mn07f7().s[34]++,domainParts[0]);const topLevelDomain=(cov_2mn0mn07f7().s[35]++,domainParts[domainParts.length-1]);// Check if the domain name contains only letters and numbers
const domainNameRegex=(cov_2mn0mn07f7().s[36]++,/^[a-zA-Z0-9]+$/);cov_2mn0mn07f7().s[37]++;if(!domainNameRegex.test(domainName)){cov_2mn0mn07f7().b[6][0]++;cov_2mn0mn07f7().s[38]++;// console.log(chalk.red(1005));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[39]++;console.log("Status is 1005");cov_2mn0mn07f7().s[40]++;errorc.printErrorMessage(1005);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[41]++;return 204;}else{cov_2mn0mn07f7().b[6][1]++;}// Check if the top-level domain consists of 2-6 letters
const topLevelDomainRegex=(cov_2mn0mn07f7().s[42]++,/^[a-zA-Z]{2,6}$/);cov_2mn0mn07f7().s[43]++;if(!topLevelDomainRegex.test(topLevelDomain)){cov_2mn0mn07f7().b[7][0]++;cov_2mn0mn07f7().s[44]++;// console.log(chalk.red(1006));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[45]++;console.log("Status is 1006");cov_2mn0mn07f7().s[46]++;errorc.printErrorMessage(1006);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[47]++;return 204;}else{cov_2mn0mn07f7().b[7][1]++;}}// Split the email address into two parts
//  const parts = email.split("@");
//  console.log("hi",parts);
//  const local=parts[0];
//  const domain=parts[1];
//  console.log("hii",local);
//  console.log("hii",domain);
//  const len=domain.length;
//  // Check the local part
//  if (local.length === 0) return "Local part is empty";
//  if (local.length > 64) return "Local part is too long (maximum is 64 characters)";
//  if (!/^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~.-]+$/.test(local)) return "Local part contains invalid characters";
//  if (local[0] === "." || local[local.length - 1] === ".") return "Local part starts or ends with a dot";
//  if (local.indexOf("..") !== -1) return "Local part contains two dots consecutively";
//  // Check the domain part
// //  if (domain.length === 0) return "Domain part is empty";
//  if (typeof domain !== "undefined" && len === 0) 
//  {
//   return "Domain part is empty";
//  }
//  if (len > 255) 
//  {
//   return "Domain part is too long (maximum is 255 characters)";
//  }
//  const domainParts = domain.split(".");
//  console.log(domainParts);
//  for (const part of domainParts) 
//  {
//    if (part.length === 0)
//     {
//       return "Domain part contains an empty label";
//     }
//    if (part.length > 63)
//    {
//      return "A label in the domain part is too long (maximum is 63 characters)";
//    }
//    if (part[0] === "-" || part[part.length - 1] === "-") 
//    {
//     return "A label in the domain part starts or ends with a hyphen";
//    }
//  }
//  // Check the TLD
//  const tld = domainParts[domainParts.length - 1];
//  if (!/^[a-z]+$/.test(tld)) return "TLD contains invalid characters";
//  return true;
cov_2mn0mn07f7().s[48]++;console.log("Status is 200");cov_2mn0mn07f7().s[49]++;errorc.printErrorMessage(200);cov_2mn0mn07f7().s[50]++;console.log(chalk.cyan("\nReason:\nThe prefix appears to the left of the @ symbol\nThe domain appears to the right of the @ symbol\nProper syntax: \nThe email address have the correct format, including an @ symbol and a domain name"));cov_2mn0mn07f7().s[51]++;return 200;}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,