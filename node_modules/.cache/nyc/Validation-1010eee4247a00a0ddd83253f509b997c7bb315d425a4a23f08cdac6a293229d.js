function cov_2mn0mn07f7(){var path="C:\\Users\\arshad.muhammed\\Desktop\\basictest\\Validation.js";var hash="469d4bea18c6b506b0c56c7a551a7d619cfea2ab";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\arshad.muhammed\\Desktop\\basictest\\Validation.js",statementMap:{"0":{start:{line:2,column:14},end:{line:2,column:30}},"1":{start:{line:3,column:13},end:{line:3,column:35}},"2":{start:{line:24,column:0},end:{line:198,column:2}},"3":{start:{line:27,column:0},end:{line:197,column:1}},"4":{start:{line:29,column:2},end:{line:29,column:69}},"5":{start:{line:30,column:2},end:{line:30,column:32}},"6":{start:{line:31,column:8},end:{line:31,column:39}},"7":{start:{line:32,column:8},end:{line:32,column:20}},"8":{start:{line:37,column:16},end:{line:37,column:32}},"9":{start:{line:40,column:2},end:{line:133,column:1}},"10":{start:{line:41,column:4},end:{line:41,column:30}},"11":{start:{line:42,column:4},end:{line:42,column:54}},"12":{start:{line:43,column:4},end:{line:43,column:34}},"13":{start:{line:44,column:4},end:{line:44,column:35}},"14":{start:{line:46,column:4},end:{line:46,column:15}},"15":{start:{line:50,column:16},end:{line:50,column:24}},"16":{start:{line:52,column:14},end:{line:52,column:22}},"17":{start:{line:56,column:24},end:{line:56,column:43}},"18":{start:{line:57,column:2},end:{line:64,column:3}},"19":{start:{line:59,column:4},end:{line:59,column:54}},"20":{start:{line:60,column:4},end:{line:60,column:34}},"21":{start:{line:61,column:4},end:{line:61,column:35}},"22":{start:{line:63,column:4},end:{line:63,column:15}},"23":{start:{line:67,column:22},end:{line:67,column:39}},"24":{start:{line:69,column:2},end:{line:69,column:27}},"25":{start:{line:96,column:21},end:{line:96,column:35}},"26":{start:{line:97,column:25},end:{line:97,column:60}},"27":{start:{line:100,column:0},end:{line:132,column:1}},"28":{start:{line:106,column:26},end:{line:106,column:42}},"29":{start:{line:107,column:2},end:{line:115,column:3}},"30":{start:{line:109,column:4},end:{line:109,column:54}},"31":{start:{line:110,column:4},end:{line:110,column:34}},"32":{start:{line:111,column:4},end:{line:111,column:35}},"33":{start:{line:114,column:4},end:{line:114,column:15}},"34":{start:{line:118,column:30},end:{line:118,column:47}},"35":{start:{line:119,column:2},end:{line:127,column:3}},"36":{start:{line:121,column:4},end:{line:121,column:54}},"37":{start:{line:122,column:4},end:{line:122,column:34}},"38":{start:{line:123,column:4},end:{line:123,column:35}},"39":{start:{line:126,column:4},end:{line:126,column:15}},"40":{start:{line:131,column:2},end:{line:131,column:13}},"41":{start:{line:191,column:0},end:{line:191,column:29}},"42":{start:{line:192,column:0},end:{line:192,column:30}},"43":{start:{line:194,column:0},end:{line:194,column:235}},"44":{start:{line:196,column:0},end:{line:196,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:23},end:{line:24,column:24}},loc:{start:{line:24,column:40},end:{line:198,column:1}},line:24}},branchMap:{"0":{loc:{start:{line:27,column:0},end:{line:197,column:1}},type:"if",locations:[{start:{line:27,column:0},end:{line:197,column:1}},{start:{line:27,column:0},end:{line:197,column:1}}],line:27},"1":{loc:{start:{line:40,column:2},end:{line:133,column:1}},type:"if",locations:[{start:{line:40,column:2},end:{line:133,column:1}},{start:{line:40,column:2},end:{line:133,column:1}}],line:40},"2":{loc:{start:{line:57,column:2},end:{line:64,column:3}},type:"if",locations:[{start:{line:57,column:2},end:{line:64,column:3}},{start:{line:57,column:2},end:{line:64,column:3}}],line:57},"3":{loc:{start:{line:100,column:0},end:{line:132,column:1}},type:"if",locations:[{start:{line:100,column:0},end:{line:132,column:1}},{start:{line:100,column:0},end:{line:132,column:1}}],line:100},"4":{loc:{start:{line:100,column:3},end:{line:100,column:29}},type:"binary-expr",locations:[{start:{line:100,column:3},end:{line:100,column:13}},{start:{line:100,column:15},end:{line:100,column:29}}],line:100},"5":{loc:{start:{line:107,column:2},end:{line:115,column:3}},type:"if",locations:[{start:{line:107,column:2},end:{line:115,column:3}},{start:{line:107,column:2},end:{line:115,column:3}}],line:107},"6":{loc:{start:{line:119,column:2},end:{line:127,column:3}},type:"if",locations:[{start:{line:119,column:2},end:{line:127,column:3}},{start:{line:119,column:2},end:{line:127,column:3}}],line:119}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"469d4bea18c6b506b0c56c7a551a7d619cfea2ab"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mn0mn07f7=function(){return actualCoverage;};}return actualCoverage;}cov_2mn0mn07f7();const chalk=(cov_2mn0mn07f7().s[0]++,require('chalk'));//to make colorful text
const errorc=(cov_2mn0mn07f7().s[1]++,require('./Errorcode'));// exports.isValidEmail = function (email) {
//     console.log(chalk.gray.italic("\nentering into validate function() ......\n")); 
//     const emailRegex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
//     var isvalid= emailRegex.test(String(email).toLowerCase());
//     if (isvalid) {
//       console.log(chalk.bold.green("Email is valid: " + email));
//   } else {
//       console.log(chalk.bold.red("Email is invalid: " + email));
//       // console.log("Invalid Email format");
//       errorc.printErrorMessage(1000); // Output: Error: invalid input format
//   }
//   console.log(chalk.gray.italic("\nreturning value from validate function() ......\n"));
//   return isvalid;
//   }
cov_2mn0mn07f7().s[2]++;exports.isValidEmail=function(email){cov_2mn0mn07f7().f[0]++;cov_2mn0mn07f7().s[3]++;//   // Split the email address on the "@" character
if(email===""){cov_2mn0mn07f7().b[0][0]++;cov_2mn0mn07f7().s[4]++;console.log('\u001b[0m'+'validateEmail: Status for '+email,'is: ');cov_2mn0mn07f7().s[5]++;console.log("Status is 1001");cov_2mn0mn07f7().s[6]++;errorc.printErrorMessage(1001);cov_2mn0mn07f7().s[7]++;return 1001;}else{cov_2mn0mn07f7().b[0][1]++;const parts=(cov_2mn0mn07f7().s[8]++,email.split("@"));// Check if there are exactly 2 parts
cov_2mn0mn07f7().s[9]++;if(parts.length!==2){cov_2mn0mn07f7().b[1][0]++;cov_2mn0mn07f7().s[10]++;console.log(parts.length);cov_2mn0mn07f7().s[11]++;console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[12]++;console.log("Status is 1002");cov_2mn0mn07f7().s[13]++;errorc.printErrorMessage(1002);//  console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[14]++;return 204;}else{cov_2mn0mn07f7().b[1][1]++;// Get the username and domain parts
var username=(cov_2mn0mn07f7().s[15]++,parts[0]);var domain=(cov_2mn0mn07f7().s[16]++,parts[1]);// Check if the username part contains only valid characters
const usernameRegex=(cov_2mn0mn07f7().s[17]++,/^[a-zA-Z0-9.+-]+$/);cov_2mn0mn07f7().s[18]++;if(!usernameRegex.test(username)){cov_2mn0mn07f7().b[2][0]++;cov_2mn0mn07f7().s[19]++;// console.log(chalk.red(1003));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[20]++;console.log("Status is 1003");cov_2mn0mn07f7().s[21]++;errorc.printErrorMessage(1003);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[22]++;return 204;}else{cov_2mn0mn07f7().b[2][1]++;}// Split the domain part on the "." character
const domainParts=(cov_2mn0mn07f7().s[23]++,domain.split("."));cov_2mn0mn07f7().s[24]++;console.log(domainParts);// // Check if the TLD domain present
// if ((domainParts[1]=='')||(domainParts[0]=='')) {
//   //  console.log(chalk.red(1004));
//   console.log(chalk.red("\nInValid email address"));
//   console.log("Status is 1008");
//    errorc.printErrorMessage(1008);
//   // console.log(chalk.red("Invalid email address"));
//   return 204;
// }
// // Check if there are at least 2 parts
// if (domainParts.length < 2) {
//   //  console.log(chalk.red(1004));
//   console.log(chalk.red("\nInValid email address"));
//   console.log("Status is 1008");
//    errorc.printErrorMessage(1008);
//   // console.log(chalk.red("Invalid email address"));
//   return 204;
// }
// Get the domain name and top-level domain
const domainName=(cov_2mn0mn07f7().s[25]++,domainParts[0]);const topLevelDomain=(cov_2mn0mn07f7().s[26]++,domainParts[domainParts.length-1]);cov_2mn0mn07f7().s[27]++;if((cov_2mn0mn07f7().b[4][0]++,domainName)&&(cov_2mn0mn07f7().b[4][1]++,topLevelDomain)){cov_2mn0mn07f7().b[3][0]++;// Check if the domain name contains only letters and numbers
const domainNameRegex=(cov_2mn0mn07f7().s[28]++,/^[a-zA-Z0-9]+$/);cov_2mn0mn07f7().s[29]++;if(!domainNameRegex.test(domainName)){cov_2mn0mn07f7().b[5][0]++;cov_2mn0mn07f7().s[30]++;// console.log(chalk.red(1005));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[31]++;console.log("Status is 1005");cov_2mn0mn07f7().s[32]++;errorc.printErrorMessage(1005);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[33]++;return 204;}else{cov_2mn0mn07f7().b[5][1]++;}// Check if the top-level domain consists of 2-6 letters
const topLevelDomainRegex=(cov_2mn0mn07f7().s[34]++,/^[a-zA-Z]{2,6}$/);cov_2mn0mn07f7().s[35]++;if(!topLevelDomainRegex.test(topLevelDomain)){cov_2mn0mn07f7().b[6][0]++;cov_2mn0mn07f7().s[36]++;// console.log(chalk.red(1006));
console.log(chalk.red("\nInValid email address"));cov_2mn0mn07f7().s[37]++;console.log("Status is 1006");cov_2mn0mn07f7().s[38]++;errorc.printErrorMessage(1006);// console.log(chalk.red("Invalid email address"));
cov_2mn0mn07f7().s[39]++;return 204;}else{cov_2mn0mn07f7().b[6][1]++;}}else{cov_2mn0mn07f7().b[3][1]++;cov_2mn0mn07f7().s[40]++;return 204;}}// Split the email address into two parts
//  const parts = email.split("@");
//  console.log("hi",parts);
//  const local=parts[0];
//  const domain=parts[1];
//  console.log("hii",local);
//  console.log("hii",domain);
//  const len=domain.length;
//  // Check the local part
//  if (local.length === 0) return "Local part is empty";
//  if (local.length > 64) return "Local part is too long (maximum is 64 characters)";
//  if (!/^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~.-]+$/.test(local)) return "Local part contains invalid characters";
//  if (local[0] === "." || local[local.length - 1] === ".") return "Local part starts or ends with a dot";
//  if (local.indexOf("..") !== -1) return "Local part contains two dots consecutively";
//  // Check the domain part
// //  if (domain.length === 0) return "Domain part is empty";
//  if (typeof domain !== "undefined" && len === 0) 
//  {
//   return "Domain part is empty";
//  }
//  if (len > 255) 
//  {
//   return "Domain part is too long (maximum is 255 characters)";
//  }
//  const domainParts = domain.split(".");
//  console.log(domainParts);
//  for (const part of domainParts) 
//  {
//    if (part.length === 0)
//     {
//       return "Domain part contains an empty label";
//     }
//    if (part.length > 63)
//    {
//      return "A label in the domain part is too long (maximum is 63 characters)";
//    }
//    if (part[0] === "-" || part[part.length - 1] === "-") 
//    {
//     return "A label in the domain part starts or ends with a hyphen";
//    }
//  }
//  // Check the TLD
//  const tld = domainParts[domainParts.length - 1];
//  if (!/^[a-z]+$/.test(tld)) return "TLD contains invalid characters";
//  return true;
cov_2mn0mn07f7().s[41]++;console.log("Status is 200");cov_2mn0mn07f7().s[42]++;errorc.printErrorMessage(200);cov_2mn0mn07f7().s[43]++;console.log(chalk.cyan("\nReason:\nThe prefix appears to the left of the @ symbol\nThe domain appears to the right of the @ symbol\nProper syntax: \nThe email address have the correct format, including an @ symbol and a domain name"));cov_2mn0mn07f7().s[44]++;return 200;}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFsayIsInJlcXVpcmUiLCJlcnJvcmMiLCJleHBvcnRzIiwiaXNWYWxpZEVtYWlsIiwiZW1haWwiLCJjb25zb2xlIiwibG9nIiwicHJpbnRFcnJvck1lc3NhZ2UiLCJwYXJ0cyIsInNwbGl0IiwibGVuZ3RoIiwicmVkIiwidXNlcm5hbWUiLCJkb21haW4iLCJ1c2VybmFtZVJlZ2V4IiwidGVzdCIsImRvbWFpblBhcnRzIiwiZG9tYWluTmFtZSIsInRvcExldmVsRG9tYWluIiwiZG9tYWluTmFtZVJlZ2V4IiwidG9wTGV2ZWxEb21haW5SZWdleCIsImN5YW4iXSwic291cmNlcyI6WyJWYWxpZGF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7IC8vdG8gbWFrZSBjb2xvcmZ1bCB0ZXh0XHJcbmNvbnN0IGVycm9yYz1yZXF1aXJlKCcuL0Vycm9yY29kZScpO1xyXG5cclxuLy8gZXhwb3J0cy5pc1ZhbGlkRW1haWwgPSBmdW5jdGlvbiAoZW1haWwpIHtcclxuXHJcbi8vICAgICBjb25zb2xlLmxvZyhjaGFsay5ncmF5Lml0YWxpYyhcIlxcbmVudGVyaW5nIGludG8gdmFsaWRhdGUgZnVuY3Rpb24oKSAuLi4uLi5cXG5cIikpOyBcclxuLy8gICAgIGNvbnN0IGVtYWlsUmVnZXggPSAvXigoW148PigpXFxbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClcXFtcXF1cXFxcLiw7Olxcc0BcIl0rKSopfChcIi4rXCIpKUAoKFxcW1swLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXF0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvO1xyXG4vLyAgICAgdmFyIGlzdmFsaWQ9IGVtYWlsUmVnZXgudGVzdChTdHJpbmcoZW1haWwpLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgXHJcbi8vICAgICBpZiAoaXN2YWxpZCkge1xyXG4vLyAgICAgICBjb25zb2xlLmxvZyhjaGFsay5ib2xkLmdyZWVuKFwiRW1haWwgaXMgdmFsaWQ6IFwiICsgZW1haWwpKTtcclxuLy8gICB9IGVsc2Uge1xyXG4vLyAgICAgICBjb25zb2xlLmxvZyhjaGFsay5ib2xkLnJlZChcIkVtYWlsIGlzIGludmFsaWQ6IFwiICsgZW1haWwpKTtcclxuLy8gICAgICAgLy8gY29uc29sZS5sb2coXCJJbnZhbGlkIEVtYWlsIGZvcm1hdFwiKTtcclxuXHJcbi8vICAgICAgIGVycm9yYy5wcmludEVycm9yTWVzc2FnZSgxMDAwKTsgLy8gT3V0cHV0OiBFcnJvcjogaW52YWxpZCBpbnB1dCBmb3JtYXRcclxuICAgICAgXHJcbi8vICAgfVxyXG4vLyAgIGNvbnNvbGUubG9nKGNoYWxrLmdyYXkuaXRhbGljKFwiXFxucmV0dXJuaW5nIHZhbHVlIGZyb20gdmFsaWRhdGUgZnVuY3Rpb24oKSAuLi4uLi5cXG5cIikpO1xyXG4vLyAgIHJldHVybiBpc3ZhbGlkO1xyXG4vLyAgIH1cclxuICBcclxuZXhwb3J0cy5pc1ZhbGlkRW1haWwgPSBmdW5jdGlvbiAoZW1haWwpIHtcclxuXHJcbi8vICAgLy8gU3BsaXQgdGhlIGVtYWlsIGFkZHJlc3Mgb24gdGhlIFwiQFwiIGNoYXJhY3RlclxyXG5pZihlbWFpbD09PVwiXCIpXHJcbntcclxuICBjb25zb2xlLmxvZygnXFx1MDAxYlswbScrJ3ZhbGlkYXRlRW1haWw6IFN0YXR1cyBmb3IgJytlbWFpbCwnaXM6ICcpO1xyXG4gIGNvbnNvbGUubG9nKFwiU3RhdHVzIGlzIDEwMDFcIik7XHJcbiAgICAgICAgZXJyb3JjLnByaW50RXJyb3JNZXNzYWdlKDEwMDEpO1xyXG4gICAgICAgIHJldHVybiAxMDAxO1xyXG59XHJcbmVsc2V7XHJcblxyXG5cclxuICBjb25zdCBwYXJ0cyA9IGVtYWlsLnNwbGl0KFwiQFwiKTtcclxuXHJcbiAgLy8gQ2hlY2sgaWYgdGhlcmUgYXJlIGV4YWN0bHkgMiBwYXJ0c1xyXG4gIGlmIChwYXJ0cy5sZW5ndGggIT09IDIpIHtcclxuICAgIGNvbnNvbGUubG9nKHBhcnRzLmxlbmd0aCk7XHJcbiAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJcXG5JblZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gICAgY29uc29sZS5sb2coXCJTdGF0dXMgaXMgMTAwMlwiKTtcclxuICAgIGVycm9yYy5wcmludEVycm9yTWVzc2FnZSgxMDAyKTtcclxuICAgIC8vICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJJbnZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gICAgcmV0dXJuIDIwNDtcclxuICB9XHJcbmVsc2V7XHJcbiAgLy8gR2V0IHRoZSB1c2VybmFtZSBhbmQgZG9tYWluIHBhcnRzXHJcbiAgdmFyIHVzZXJuYW1lID1wYXJ0c1swXTtcclxuICAgXHJcbiAgdmFyIGRvbWFpbiA9cGFydHNbMV07XHJcblxyXG5cclxuICAvLyBDaGVjayBpZiB0aGUgdXNlcm5hbWUgcGFydCBjb250YWlucyBvbmx5IHZhbGlkIGNoYXJhY3RlcnNcclxuICBjb25zdCB1c2VybmFtZVJlZ2V4ID0gL15bYS16QS1aMC05ListXSskLztcclxuICBpZiAoIXVzZXJuYW1lUmVnZXgudGVzdCh1c2VybmFtZSkpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKGNoYWxrLnJlZCgxMDAzKSk7XHJcbiAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJcXG5JblZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gICAgY29uc29sZS5sb2coXCJTdGF0dXMgaXMgMTAwM1wiKTtcclxuICAgIGVycm9yYy5wcmludEVycm9yTWVzc2FnZSgxMDAzKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcIkludmFsaWQgZW1haWwgYWRkcmVzc1wiKSk7XHJcbiAgICByZXR1cm4gMjA0O1xyXG4gIH1cclxuXHJcbiAgLy8gU3BsaXQgdGhlIGRvbWFpbiBwYXJ0IG9uIHRoZSBcIi5cIiBjaGFyYWN0ZXJcclxuICBjb25zdCBkb21haW5QYXJ0cyA9IGRvbWFpbi5zcGxpdChcIi5cIik7XHJcblxyXG4gIGNvbnNvbGUubG9nKGRvbWFpblBhcnRzKTtcclxuXHJcblxyXG5cclxuXHJcblxyXG4gIC8vIC8vIENoZWNrIGlmIHRoZSBUTEQgZG9tYWluIHByZXNlbnRcclxuICAvLyBpZiAoKGRvbWFpblBhcnRzWzFdPT0nJyl8fChkb21haW5QYXJ0c1swXT09JycpKSB7XHJcbiAgLy8gICAvLyAgY29uc29sZS5sb2coY2hhbGsucmVkKDEwMDQpKTtcclxuICAvLyAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcIlxcbkluVmFsaWQgZW1haWwgYWRkcmVzc1wiKSk7XHJcbiAgLy8gICBjb25zb2xlLmxvZyhcIlN0YXR1cyBpcyAxMDA4XCIpO1xyXG4gIC8vICAgIGVycm9yYy5wcmludEVycm9yTWVzc2FnZSgxMDA4KTtcclxuICAvLyAgIC8vIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcIkludmFsaWQgZW1haWwgYWRkcmVzc1wiKSk7XHJcbiAgLy8gICByZXR1cm4gMjA0O1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gLy8gQ2hlY2sgaWYgdGhlcmUgYXJlIGF0IGxlYXN0IDIgcGFydHNcclxuICAvLyBpZiAoZG9tYWluUGFydHMubGVuZ3RoIDwgMikge1xyXG4gIC8vICAgLy8gIGNvbnNvbGUubG9nKGNoYWxrLnJlZCgxMDA0KSk7XHJcbiAgLy8gICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJcXG5JblZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gIC8vICAgY29uc29sZS5sb2coXCJTdGF0dXMgaXMgMTAwOFwiKTtcclxuICAvLyAgICBlcnJvcmMucHJpbnRFcnJvck1lc3NhZ2UoMTAwOCk7XHJcbiAgLy8gICAvLyBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJJbnZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gIC8vICAgcmV0dXJuIDIwNDtcclxuICAvLyB9XHJcblxyXG4gIC8vIEdldCB0aGUgZG9tYWluIG5hbWUgYW5kIHRvcC1sZXZlbCBkb21haW5cclxuICBjb25zdCBkb21haW5OYW1lID0gZG9tYWluUGFydHNbMF07XHJcbiAgY29uc3QgdG9wTGV2ZWxEb21haW4gPSBkb21haW5QYXJ0c1tkb21haW5QYXJ0cy5sZW5ndGggLSAxXTtcclxuXHJcblxyXG5pZihkb21haW5OYW1lJiZ0b3BMZXZlbERvbWFpbilcclxue1xyXG5cclxuXHJcblxyXG4gIC8vIENoZWNrIGlmIHRoZSBkb21haW4gbmFtZSBjb250YWlucyBvbmx5IGxldHRlcnMgYW5kIG51bWJlcnNcclxuICBjb25zdCBkb21haW5OYW1lUmVnZXggPSAvXlthLXpBLVowLTldKyQvO1xyXG4gIGlmICghZG9tYWluTmFtZVJlZ2V4LnRlc3QoZG9tYWluTmFtZSkpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKGNoYWxrLnJlZCgxMDA1KSk7XHJcbiAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJcXG5JblZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gICAgY29uc29sZS5sb2coXCJTdGF0dXMgaXMgMTAwNVwiKTtcclxuICAgIGVycm9yYy5wcmludEVycm9yTWVzc2FnZSgxMDA1KTtcclxuICAgIFxyXG4gICAgLy8gY29uc29sZS5sb2coY2hhbGsucmVkKFwiSW52YWxpZCBlbWFpbCBhZGRyZXNzXCIpKTtcclxuICAgIHJldHVybiAyMDQ7XHJcbiAgfVxyXG5cclxuICAvLyBDaGVjayBpZiB0aGUgdG9wLWxldmVsIGRvbWFpbiBjb25zaXN0cyBvZiAyLTYgbGV0dGVyc1xyXG4gIGNvbnN0IHRvcExldmVsRG9tYWluUmVnZXggPSAvXlthLXpBLVpdezIsNn0kLztcclxuICBpZiAoIXRvcExldmVsRG9tYWluUmVnZXgudGVzdCh0b3BMZXZlbERvbWFpbikpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKGNoYWxrLnJlZCgxMDA2KSk7XHJcbiAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJcXG5JblZhbGlkIGVtYWlsIGFkZHJlc3NcIikpO1xyXG4gICAgY29uc29sZS5sb2coXCJTdGF0dXMgaXMgMTAwNlwiKTtcclxuICAgIGVycm9yYy5wcmludEVycm9yTWVzc2FnZSgxMDA2KTtcclxuICAgIFxyXG4gICAgLy8gY29uc29sZS5sb2coY2hhbGsucmVkKFwiSW52YWxpZCBlbWFpbCBhZGRyZXNzXCIpKTtcclxuICAgIHJldHVybiAyMDQ7XHJcbiAgfVxyXG5cclxufVxyXG5lbHNle1xyXG4gIHJldHVybiAyMDQ7XHJcbn1cclxufVxyXG5cclxuXHJcbiAvLyBTcGxpdCB0aGUgZW1haWwgYWRkcmVzcyBpbnRvIHR3byBwYXJ0c1xyXG4vLyAgY29uc3QgcGFydHMgPSBlbWFpbC5zcGxpdChcIkBcIik7XHJcblxyXG4vLyAgY29uc29sZS5sb2coXCJoaVwiLHBhcnRzKTtcclxuLy8gIGNvbnN0IGxvY2FsPXBhcnRzWzBdO1xyXG4vLyAgY29uc3QgZG9tYWluPXBhcnRzWzFdO1xyXG5cclxuLy8gIGNvbnNvbGUubG9nKFwiaGlpXCIsbG9jYWwpO1xyXG4vLyAgY29uc29sZS5sb2coXCJoaWlcIixkb21haW4pO1xyXG5cclxuLy8gIGNvbnN0IGxlbj1kb21haW4ubGVuZ3RoO1xyXG5cclxuLy8gIC8vIENoZWNrIHRoZSBsb2NhbCBwYXJ0XHJcbi8vICBpZiAobG9jYWwubGVuZ3RoID09PSAwKSByZXR1cm4gXCJMb2NhbCBwYXJ0IGlzIGVtcHR5XCI7XHJcbi8vICBpZiAobG9jYWwubGVuZ3RoID4gNjQpIHJldHVybiBcIkxvY2FsIHBhcnQgaXMgdG9vIGxvbmcgKG1heGltdW0gaXMgNjQgY2hhcmFjdGVycylcIjtcclxuLy8gIGlmICghL15bYS16QS1aMC05ISMkJSYnKisvPT9eX2B7fH1+Li1dKyQvLnRlc3QobG9jYWwpKSByZXR1cm4gXCJMb2NhbCBwYXJ0IGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyc1wiO1xyXG4vLyAgaWYgKGxvY2FsWzBdID09PSBcIi5cIiB8fCBsb2NhbFtsb2NhbC5sZW5ndGggLSAxXSA9PT0gXCIuXCIpIHJldHVybiBcIkxvY2FsIHBhcnQgc3RhcnRzIG9yIGVuZHMgd2l0aCBhIGRvdFwiO1xyXG4vLyAgaWYgKGxvY2FsLmluZGV4T2YoXCIuLlwiKSAhPT0gLTEpIHJldHVybiBcIkxvY2FsIHBhcnQgY29udGFpbnMgdHdvIGRvdHMgY29uc2VjdXRpdmVseVwiO1xyXG5cclxuLy8gIC8vIENoZWNrIHRoZSBkb21haW4gcGFydFxyXG4vLyAvLyAgaWYgKGRvbWFpbi5sZW5ndGggPT09IDApIHJldHVybiBcIkRvbWFpbiBwYXJ0IGlzIGVtcHR5XCI7XHJcbi8vICBpZiAodHlwZW9mIGRvbWFpbiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBsZW4gPT09IDApIFxyXG4vLyAge1xyXG4vLyAgIHJldHVybiBcIkRvbWFpbiBwYXJ0IGlzIGVtcHR5XCI7XHJcbi8vICB9XHJcbi8vICBpZiAobGVuID4gMjU1KSBcclxuLy8gIHtcclxuLy8gICByZXR1cm4gXCJEb21haW4gcGFydCBpcyB0b28gbG9uZyAobWF4aW11bSBpcyAyNTUgY2hhcmFjdGVycylcIjtcclxuLy8gIH1cclxuXHJcbi8vICBjb25zdCBkb21haW5QYXJ0cyA9IGRvbWFpbi5zcGxpdChcIi5cIik7XHJcbi8vICBjb25zb2xlLmxvZyhkb21haW5QYXJ0cyk7XHJcbiBcclxuLy8gIGZvciAoY29uc3QgcGFydCBvZiBkb21haW5QYXJ0cykgXHJcbi8vICB7XHJcbi8vICAgIGlmIChwYXJ0Lmxlbmd0aCA9PT0gMClcclxuLy8gICAgIHtcclxuLy8gICAgICAgcmV0dXJuIFwiRG9tYWluIHBhcnQgY29udGFpbnMgYW4gZW1wdHkgbGFiZWxcIjtcclxuLy8gICAgIH1cclxuLy8gICAgaWYgKHBhcnQubGVuZ3RoID4gNjMpXHJcbi8vICAgIHtcclxuLy8gICAgICByZXR1cm4gXCJBIGxhYmVsIGluIHRoZSBkb21haW4gcGFydCBpcyB0b28gbG9uZyAobWF4aW11bSBpcyA2MyBjaGFyYWN0ZXJzKVwiO1xyXG4vLyAgICB9XHJcbi8vICAgIGlmIChwYXJ0WzBdID09PSBcIi1cIiB8fCBwYXJ0W3BhcnQubGVuZ3RoIC0gMV0gPT09IFwiLVwiKSBcclxuLy8gICAge1xyXG4vLyAgICAgcmV0dXJuIFwiQSBsYWJlbCBpbiB0aGUgZG9tYWluIHBhcnQgc3RhcnRzIG9yIGVuZHMgd2l0aCBhIGh5cGhlblwiO1xyXG4vLyAgICB9XHJcbi8vICB9XHJcblxyXG4vLyAgLy8gQ2hlY2sgdGhlIFRMRFxyXG4vLyAgY29uc3QgdGxkID0gZG9tYWluUGFydHNbZG9tYWluUGFydHMubGVuZ3RoIC0gMV07XHJcbi8vICBpZiAoIS9eW2Etel0rJC8udGVzdCh0bGQpKSByZXR1cm4gXCJUTEQgY29udGFpbnMgaW52YWxpZCBjaGFyYWN0ZXJzXCI7XHJcblxyXG4vLyAgcmV0dXJuIHRydWU7XHJcblxyXG5jb25zb2xlLmxvZyhcIlN0YXR1cyBpcyAyMDBcIik7XHJcbmVycm9yYy5wcmludEVycm9yTWVzc2FnZSgyMDApO1xyXG5cclxuY29uc29sZS5sb2coY2hhbGsuY3lhbihcIlxcblJlYXNvbjpcXG5UaGUgcHJlZml4IGFwcGVhcnMgdG8gdGhlIGxlZnQgb2YgdGhlIEAgc3ltYm9sXFxuVGhlIGRvbWFpbiBhcHBlYXJzIHRvIHRoZSByaWdodCBvZiB0aGUgQCBzeW1ib2xcXG5Qcm9wZXIgc3ludGF4OiBcXG5UaGUgZW1haWwgYWRkcmVzcyBoYXZlIHRoZSBjb3JyZWN0IGZvcm1hdCwgaW5jbHVkaW5nIGFuIEAgc3ltYm9sIGFuZCBhIGRvbWFpbiBuYW1lXCIpKTtcclxuXHJcbnJldHVybiAyMDA7XHJcbn1cclxufTsiXSwibWFwcGluZ3MiOiI0OEpBZVk7QUFBQSwyRkFkWixLQUFNQSxNQUFLLDBCQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7QUFDaEMsS0FBTUMsT0FBTSwwQkFBQ0QsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUVuQztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUEsd0JBRUFFLE9BQU8sQ0FBQ0MsWUFBWSxDQUFHLFNBQVVDLEtBQUssQ0FBRSxpREFFeEM7QUFDQSxHQUFHQSxLQUFLLEdBQUcsRUFBRSxDQUNiLG9EQUNFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxXQUFXLENBQUMsNEJBQTRCLENBQUNGLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyx3QkFDbkVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMsd0JBQ3hCTCxNQUFNLENBQUNNLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLHdCQUMvQixNQUFPLEtBQUksQ0FDbkIsQ0FBQyxJQUNHLDRCQUdGLEtBQU1DLE1BQUssMEJBQUdKLEtBQUssQ0FBQ0ssS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUU5QjtBQUFBLHdCQUNBLEdBQUlELEtBQUssQ0FBQ0UsTUFBTSxHQUFLLENBQUMsQ0FBRSxxREFDdEJMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxLQUFLLENBQUNFLE1BQU0sQ0FBQyxDQUFDLHlCQUMxQkwsT0FBTyxDQUFDQyxHQUFHLENBQUNQLEtBQUssQ0FBQ1ksR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyx5QkFDbEROLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMseUJBQzlCTCxNQUFNLENBQUNNLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUM5QjtBQUFBLHlCQUNBLE1BQU8sSUFBRyxDQUNaLENBQUMsSUFDQyw0QkFDRjtBQUNBLEdBQUlLLFNBQVEsMkJBQUVKLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFFdEIsR0FBSUssT0FBTSwyQkFBRUwsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUdwQjtBQUNBLEtBQU1NLGNBQWEsMkJBQUcsbUJBQW1CLEVBQUMseUJBQzFDLEdBQUksQ0FBQ0EsYUFBYSxDQUFDQyxJQUFJLENBQUNILFFBQVEsQ0FBQyxDQUFFLHFEQUNqQztBQUNBUCxPQUFPLENBQUNDLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDWSxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDLHlCQUNsRE4sT0FBTyxDQUFDQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyx5QkFDOUJMLE1BQU0sQ0FBQ00saUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQzlCO0FBQUEseUJBQ0EsTUFBTyxJQUFHLENBQ1osQ0FBQyxpQ0FFRDtBQUNBLEtBQU1TLFlBQVcsMkJBQUdILE1BQU0sQ0FBQ0osS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFDLHlCQUV0Q0osT0FBTyxDQUFDQyxHQUFHLENBQUNVLFdBQVcsQ0FBQyxDQU14QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBLEtBQU1DLFdBQVUsMkJBQUdELFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFDakMsS0FBTUUsZUFBYywyQkFBR0YsV0FBVyxDQUFDQSxXQUFXLENBQUNOLE1BQU0sQ0FBRyxDQUFDLENBQUMsRUFBQyx5QkFHN0QsR0FBRyw0QkFBQU8sVUFBVSwrQkFBRUMsY0FBYyxFQUM3Qiw0QkFJRTtBQUNBLEtBQU1DLGdCQUFlLDJCQUFHLGdCQUFnQixFQUFDLHlCQUN6QyxHQUFJLENBQUNBLGVBQWUsQ0FBQ0osSUFBSSxDQUFDRSxVQUFVLENBQUMsQ0FBRSxxREFDckM7QUFDQVosT0FBTyxDQUFDQyxHQUFHLENBQUNQLEtBQUssQ0FBQ1ksR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUMsQ0FBQyx5QkFDbEROLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMseUJBQzlCTCxNQUFNLENBQUNNLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUU5QjtBQUFBLHlCQUNBLE1BQU8sSUFBRyxDQUNaLENBQUMsaUNBRUQ7QUFDQSxLQUFNYSxvQkFBbUIsMkJBQUcsaUJBQWlCLEVBQUMseUJBQzlDLEdBQUksQ0FBQ0EsbUJBQW1CLENBQUNMLElBQUksQ0FBQ0csY0FBYyxDQUFDLENBQUUscURBQzdDO0FBQ0FiLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUCxLQUFLLENBQUNZLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMseUJBQ2xETixPQUFPLENBQUNDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLHlCQUM5QkwsTUFBTSxDQUFDTSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FFOUI7QUFBQSx5QkFDQSxNQUFPLElBQUcsQ0FDWixDQUFDLGlDQUVILENBQUMsSUFDRyxxREFDRixNQUFPLElBQUcsQ0FDWixDQUNBLENBR0M7QUFDRDtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQUEseUJBRUFGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDLHlCQUM3QkwsTUFBTSxDQUFDTSxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyx5QkFFOUJGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDUCxLQUFLLENBQUNzQixJQUFJLENBQUMsaU5BQWlOLENBQUMsQ0FBQyxDQUFDLHlCQUUzTyxNQUFPLElBQUcsQ0FDVixDQUNBLENBQUMifQ==